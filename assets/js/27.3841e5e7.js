(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{360:function(v,_,i){"use strict";i.r(_);var t=i(4),a=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"分页功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分页功能"}},[v._v("#")]),v._v(" 分页功能")]),v._v(" "),_("ul",[_("li",[v._v("控制页的边界值")]),v._v(" "),_("li",[v._v("limit(offset,limit)")]),v._v(" "),_("li",[v._v("这种方式在数据量非常大的时候，是非常低效的，因为它这个分页逻辑是先查出offset+limit条记录，然后抛弃前offset数据，取剩下的limit的数据，显然当数据量非常大的时候是非常低效的。")]),v._v(" "),_("li",[v._v("优化措施是 使用基于游标的分页方法，就是每次分页的时候需要接受一个查询的id主键，直接从该记录开始查找limit条数据。")])]),v._v(" "),_("h2",{attrs:{id:"登陆注册功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#登陆注册功能"}},[v._v("#")]),v._v(" 登陆注册功能")]),v._v(" "),_("ul",[_("li",[v._v("比较重要的一个是激活邮件")]),v._v(" "),_("li",[v._v("通过模板引擎补充激活邮件")]),v._v(" "),_("li",[v._v("通过JavaMailSender发送激活邮件")]),v._v(" "),_("li",[v._v("点击激活链接，给出激活信息，如果成功的话，跳转到登录页面")])]),v._v(" "),_("h2",{attrs:{id:"分布式session"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分布式session"}},[v._v("#")]),v._v(" 分布式session")]),v._v(" "),_("ul",[_("li",[v._v("粘性session,但是粘性session,会使服务器负载不是那么均衡")]),v._v(" "),_("li",[v._v("同步session,服务器做同步，服务器性能受影响，产生耦合，不太好")]),v._v(" "),_("li",[v._v("共享session,如果是共享的东西，把它放到共享session服务器中，单体存放")]),v._v(" "),_("li",[v._v("不敏感数据就放到Cookie里，敏感数据存放到Redis中，服务器统一从服务器获取")])]),v._v(" "),_("h2",{attrs:{id:"登陆、退出功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#登陆、退出功能"}},[v._v("#")]),v._v(" 登陆、退出功能")]),v._v(" "),_("ul",[_("li",[v._v("login_ticket表里面，有一个字段ticket来存放登陆凭证")]),v._v(" "),_("li",[v._v("设置一个过期时间，在过期时间内，这个登陆凭证都是有效的")]),v._v(" "),_("li",[v._v("退出的时候，直接将登陆状态值置为失效")])]),v._v(" "),_("h2",{attrs:{id:"显示登录信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#显示登录信息"}},[v._v("#")]),v._v(" 显示登录信息")]),v._v(" "),_("ul",[_("li",[v._v("定义拦截器，实现HandlerInterceptor接口，preHandle在Controller之前执行，postHandle在Controller之后执行，模板引擎之后执行afterCompletion")]),v._v(" "),_("li",[v._v("需要一个配置类拦截资源，拦截路径")]),v._v(" "),_("li",[v._v("在请求开始的时候，查询用户信息，赋予不同用户不同的权限，在本次线程中存放用户信息，考虑到线程安全，使用线程隔离的类ThreadLocal来存用户数据")])]),v._v(" "),_("h2",{attrs:{id:"检查登陆状态"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#检查登陆状态"}},[v._v("#")]),v._v(" 检查登陆状态")]),v._v(" "),_("ul",[_("li",[v._v("自定义注解，起标记作用")])]),v._v(" "),_("h2",{attrs:{id:"过滤敏感词"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#过滤敏感词"}},[v._v("#")]),v._v(" 过滤敏感词")]),v._v(" "),_("ul",[_("li",[v._v("前缀树\n"),_("ul",[_("li",[v._v("数据结构：Trie、字典树、查找树")]),v._v(" "),_("li",[v._v("特点：以空间换时间，查找效率高")]),v._v(" "),_("li",[v._v("应用场景：字符串检索、字符串统计")])])]),v._v(" "),_("li",[v._v("敏感词过滤器\n"),_("ul",[_("li",[v._v("定义前缀树")]),v._v(" "),_("li",[v._v("根据敏感词，初始化前缀树insert()方法")]),v._v(" "),_("li",[v._v("编写过滤敏感词方法query()方法")])])])]),v._v(" "),_("h2",{attrs:{id:"统一处理异常"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#统一处理异常"}},[v._v("#")]),v._v(" 统一处理异常")]),v._v(" "),_("ul",[_("li",[v._v("使用Spring MVC提供的注解 @ControllerAdvice，加在异常处理类")]),v._v(" "),_("li",[v._v("异常处理逻辑的方法上加 @ExceptionHandler(value = Exception.class)处理对应异常的逻辑")])]),v._v(" "),_("h2",{attrs:{id:"统一记录日志"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#统一记录日志"}},[v._v("#")]),v._v(" 统一记录日志")]),v._v(" "),_("ul",[_("li",[v._v("记录日志与业务逻辑耦合在一块了，不便于业务的修改、拓展以及后期维护")]),v._v(" "),_("li",[v._v("AspectJ,Spring AOP")]),v._v(" "),_("li",[v._v("JDK 动态代理，在运行时创建接口的实例，来实现代理；CGLib动态代理，运行时创建子类的方式，来实现先目标类的代理。")])]),v._v(" "),_("h2",{attrs:{id:"点赞"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#点赞"}},[v._v("#")]),v._v(" 点赞")]),v._v(" "),_("ul",[_("li",[v._v("点赞逻辑，统计点赞数量，显示点赞状态")]),v._v(" "),_("li",[v._v("使用Redis的集合，保证线程安全")]),v._v(" "),_("li",[v._v("increment(key),decrement(key),赞的加减")]),v._v(" "),_("li",[v._v("帖子、评论点赞，还有就是某人总共的赞")])]),v._v(" "),_("h2",{attrs:{id:"关注"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#关注"}},[v._v("#")]),v._v(" 关注")]),v._v(" "),_("ul",[_("li",[v._v("使用有序集合来存(key为id,值为时间)")])]),v._v(" "),_("h2",{attrs:{id:"使用redis优化登陆模块"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用redis优化登陆模块"}},[v._v("#")]),v._v(" 使用Redis优化登陆模块")]),v._v(" "),_("ul",[_("li",[v._v("使用Redis存储验证码\n"),_("ul",[_("li",[v._v("验证码需要频繁访问与刷新，对性能要求高，而且也不需要长时间保存，短时间后就会失效")]),v._v(" "),_("li",[v._v("验证码之前放在Session中，存在共享问题，放到Redis中可以避免这个问题")])])]),v._v(" "),_("li",[v._v("使用Redis存储登陆凭证和缓存用户信息\n"),_("ul",[_("li",[v._v("需要频繁查询用户状态，登陆凭证和用户信息，访问频率都会非常高，缓存到Redis中")]),v._v(" "),_("li",[v._v("用户信息\n"),_("ul",[_("li",[v._v("优化将用户信息先存到Redis中")]),v._v(" "),_("li",[v._v("Redis取不到对应的信息，访问数据库初始化key")]),v._v(" "),_("li",[v._v("数据变更，删掉Redis中的key记录")])])])])])]),v._v(" "),_("h2",{attrs:{id:"发送和显示系统消息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#发送和显示系统消息"}},[v._v("#")]),v._v(" 发送和显示系统消息")]),v._v(" "),_("ul",[_("li",[v._v("使用Kafka作为消息队列")]),v._v(" "),_("li",[v._v("生产者向Topic里发送消息，消费者监听这个Topic,长轮询的方式消费Topic里的消息")]),v._v(" "),_("li",[v._v("评论，点赞，关注后发送系统通知")]),v._v(" "),_("li",[v._v("事件驱动模型")])]),v._v(" "),_("h2",{attrs:{id:"社区搜索功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#社区搜索功能"}},[v._v("#")]),v._v(" 社区搜索功能")]),v._v(" "),_("ul",[_("li",[v._v("ES，目前性能最好，应用最广的搜索引擎")]),v._v(" "),_("li",[v._v("将帖子内容保存到ES服务器，从ES服务器搜索帖子")]),v._v(" "),_("li",[v._v("发布事件：发布帖子，将贴子异步传到ES服务器；增加评论，将评论异步传到ES服务器")])]),v._v(" "),_("h2",{attrs:{id:"spring-security"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#spring-security"}},[v._v("#")]),v._v(" Spring Security")]),v._v(" "),_("ul",[_("li",[v._v("解决安全问题，对身份的认证授权提供全面的、可扩展的支持")]),v._v(" "),_("li",[v._v("对哪些角色赋予访问哪些访问地址的权限")])]),v._v(" "),_("h2",{attrs:{id:"redis高级数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis高级数据类型"}},[v._v("#")]),v._v(" Redis高级数据类型")]),v._v(" "),_("ul",[_("li",[v._v("HyperLogLog\n"),_("ul",[_("li",[v._v("采用基数算法，用于完成独立总数的统计")]),v._v(" "),_("li",[v._v("占据空间小，无论统计多少个数据，只占12K的内存空间")])])]),v._v(" "),_("li",[v._v("Bitmap\n"),_("ul",[_("li",[v._v("字符串，按位存取数据，可以看成byte数组")]),v._v(" "),_("li",[v._v("适合存储大量连续的布尔值数据")]),v._v(" "),_("li",[v._v("员工365天签到值之类的")])])])]),v._v(" "),_("h2",{attrs:{id:"网站数据统计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#网站数据统计"}},[v._v("#")]),v._v(" 网站数据统计")]),v._v(" "),_("ul",[_("li",[v._v("UV(Unique Visitor)\n"),_("ul",[_("li",[v._v("独立访客，需要通过用户IP进行数据统计")]),v._v(" "),_("li",[v._v("HyperLogLog，性能好，存储空间小")])])]),v._v(" "),_("li",[v._v("DAU(Daily Active User)\n"),_("ul",[_("li",[v._v("日活跃用户，需要根据用户ID进行数据统计")]),v._v(" "),_("li",[v._v("Bitmap,性能好，可以精确的统计结果")])])])]),v._v(" "),_("h2",{attrs:{id:"任务执行和调度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#任务执行和调度"}},[v._v("#")]),v._v(" 任务执行和调度")]),v._v(" "),_("ul",[_("li",[v._v("JDK线程池\n"),_("ul",[_("li",[v._v("ExecutorService")]),v._v(" "),_("li",[v._v("ScheduledExecutorService")])])]),v._v(" "),_("li",[v._v("Spring线程池\n"),_("ul",[_("li",[v._v("ThreadPoolTaskExecutor")]),v._v(" "),_("li",[v._v("ThreadPoolTaskScheduler")])])]),v._v(" "),_("li",[v._v("定时任务\n"),_("ul",[_("li",[v._v("Spring Quartz")]),v._v(" "),_("li",[v._v("程序运行参数存在数据库里")]),v._v(" "),_("li",[v._v("Schedule，job，Trigger")])])])]),v._v(" "),_("h2",{attrs:{id:"热帖排行"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#热帖排行"}},[v._v("#")]),v._v(" 热帖排行")]),v._v(" "),_("ul",[_("li",[v._v("帖子评分，log(精华分 + 收藏数 * 10 + 点赞数 *2 + 评论数 * 2) + (发布时间 - 初始时间)")])]),v._v(" "),_("h2",{attrs:{id:"优化网站性能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#优化网站性能"}},[v._v("#")]),v._v(" 优化网站性能")]),v._v(" "),_("ul",[_("li",[v._v("使用Caffeine进行本地缓存")]),v._v(" "),_("li",[v._v("分布式缓存：将数据缓存到NoSQL数据库上，例如：Redis")]),v._v(" "),_("li",[v._v("多级缓存：本地缓存 -> 分布式缓存 -> DB")])]),v._v(" "),_("h2",{attrs:{id:"单元测试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单元测试"}},[v._v("#")]),v._v(" 单元测试")]),v._v(" "),_("ul",[_("li",[v._v("保证测试方法的独立性")]),v._v(" "),_("li",[v._v("步骤：初始化数据、执行测试代码，验证测试结果，清理测试数据")]),v._v(" "),_("li",[v._v("@BeforeClass,@AfterClass,@Before,@After")])])])}),[],!1,null,null,null);_.default=a.exports}}]);